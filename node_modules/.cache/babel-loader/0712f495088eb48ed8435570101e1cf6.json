{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/progress-bar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  totalTime,\n  timer,\n  timeDisplay\n}) {\n  if (timeDisplay) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar bg-danger\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": parseInt((totalTime - timer) / totalTime * 100) // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: parseInt((totalTime - timer) / totalTime * 100) + \"%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 3\n      }\n    })));\n  } else {\n    return null;\n  }\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/progress-bar.js"],"names":["React","ProgressBar","totalTime","timer","timeDisplay","height","parseInt","width"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,SAAD;AAAWC,EAAAA,KAAX;AAAiBC,EAAAA;AAAjB,CAArB,EAAoD;AAGpD,MAAGA,WAAH,EAAgB;AAChB,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAeC,QAAQ,CAAC,CAACJ,SAAS,GAAGC,KAAb,IAAoBD,SAApB,GAAgC,GAAjC,CALzB,CAKgE;AALhE;AAME,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAGD,QAAQ,CAAC,CAACJ,SAAS,GAAGC,KAAb,IAAoBD,SAApB,GAAgC,GAAjC,CAAR,GAAgD;AAA1D,OANT,CAM0E;AAN1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CADA;AAaE,GAdF,MAeK;AACH,WAAO,IAAP;AACD;AAEA;;AACD,eAAeD,WAAf","sourcesContent":["\nimport React from \"react\"\n\nfunction ProgressBar({totalTime,timer,timeDisplay}) {\n\n\nif(timeDisplay) {\nreturn (\n<div className=\"col\">\n<div className=\"progress\" style={{ height: \"20px\" }}>\n  <div\n    className=\"progress-bar bg-danger\"\n    role=\"progressbar\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    aria-valuenow={parseInt((totalTime - timer)/totalTime * 100)} // TODO: Increase aria-valuenow as elapsed time increases\n    style={{ width : parseInt((totalTime - timer)/totalTime * 100) + \"%\" }} // TODO: Increase width % as elapsed time increases\n  />\n</div>\n</div>\n)}\nelse {\n  return null\n}\n \n}\nexport default ProgressBar"]},"metadata":{},"sourceType":"module"}