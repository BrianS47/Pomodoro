{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Incrementbar from \"./increment-bar\";\nimport StartStop from \"./start-stop\";\nimport DisplayTimer from \"./display-timer\";\nimport ProgressBar from \"./progress-bar\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focus, setFocus] = useState(25);\n  const [rest, setRest] = useState(5);\n  const [timeDisplay, setTimeDisplay] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [event, setEvent] = useState(\"Focus\");\n  const [totalTime, setTotalTime] = useState(0);\n\n  const stopAndReset = () => {\n    setIsTimerRunning(false);\n    setTimeDisplay(false);\n    setFocus(25);\n    setRest(5);\n  };\n\n  useInterval(() => {\n    if (timer != 0) {\n      setTimer(timer - 1);\n    } else {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play();\n\n      if (event === \"Focus\") {\n        setEvent(\"Break\");\n        setTimer(rest * 60);\n      } else {\n        setEvent(\"Focus\");\n        setTimer(focus * 60);\n      }\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setTimeDisplay(true);\n  }\n\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTimer(focus * 60);\n    }\n\n    if (event === \"Break\") {\n      setTimer(rest * 60);\n    }\n  }, [focus, rest, event]);\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTotalTime(focus);\n    } else {\n      setTotalTime(rest);\n    }\n  }, [event, focus, rest]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Incrementbar, {\n    event: \"Focus\",\n    interval: focus,\n    setInterval: setFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Incrementbar, {\n    event: \"Break\",\n    interval: rest,\n    setInterval: setRest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StartStop, {\n    playPause: playPause,\n    isTimerRunning: isTimerRunning,\n    stopAndReset: stopAndReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))), timeDisplay ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTimer, {\n    timer: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    totalTime: totalTime,\n    timer: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))) : null);\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useEffect","classNames","useInterval","Incrementbar","StartStop","DisplayTimer","ProgressBar","minutesToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","focus","setFocus","rest","setRest","timeDisplay","setTimeDisplay","timer","setTimer","event","setEvent","totalTime","setTotalTime","stopAndReset","Audio","process","env","PUBLIC_URL","play","playPause","prevState"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Incrementbar from \"./increment-bar\"\nimport StartStop from \"./start-stop\"\nimport DisplayTimer from \"./display-timer\"\nimport ProgressBar from \"./progress-bar\"\nimport {minutesToDuration} from \"../utils/duration\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focus, setFocus] = useState(25)\n  const [rest, setRest] = useState(5)\n  const [timeDisplay,setTimeDisplay] = useState(false)\n  const [timer,setTimer] = useState(0)\n  const [event,setEvent] = useState(\"Focus\")\n  const [totalTime,setTotalTime] = useState(0)\n  const stopAndReset = () => {\n    setIsTimerRunning(false)\n    setTimeDisplay(false)\n    setFocus(25)\n    setRest(5)\n  }\n  \n\n  useInterval(\n    () => {\n      \n      if(timer != 0){\n      setTimer(timer - 1)\n      \n      } else {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/submarine-dive-horn.mp3`).play();\n        if(event === \"Focus\") {\n          setEvent(\"Break\")\n          setTimer(rest * 60)\n          \n        } else {\n          setEvent(\"Focus\")\n          setTimer(focus * 60)\n          \n        }\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setTimeDisplay(true)\n    \n    \n    \n  }\n\n  useEffect(\n    () => {\n      if(event === \"Focus\"){\n      setTimer(focus * 60)}\n      if(event === \"Break\") {\n        setTimer(rest * 60)\n      }\n      \n    },\n    [focus,rest,event]\n  )\n\n  useEffect(\n    () => {\n      if(event === \"Focus\") {\n        setTotalTime(focus)\n      } else {\n        setTotalTime(rest)\n      }\n    },\n    [event,focus,rest]\n  )\n\n \n\n  return (\n    <div className=\"pomodoro\">\n      \n      <div className=\"row\">\n        <div className=\"col \">\n          <Incrementbar event={\"Focus\"}  interval={focus} setInterval={setFocus} />\n        </div>\n        <div className=\"col\">\n          <Incrementbar event={\"Break\"} interval={rest} setInterval ={setRest}/>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n        <StartStop playPause={playPause} isTimerRunning={isTimerRunning}  stopAndReset={stopAndReset}  />\n        </div>\n      </div>\n      \n      \n      { timeDisplay ? <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        \n        <div className=\"row mb-2\">\n         <DisplayTimer timer={timer}/>\n        </div>\n        <div className=\"row mb-2\">\n          <ProgressBar totalTime={totalTime} timer={timer}/>\n        </div>\n      </div>  : null}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}