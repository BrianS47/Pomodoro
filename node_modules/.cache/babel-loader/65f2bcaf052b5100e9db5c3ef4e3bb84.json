{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Incrementbar from \"./increment-bar\";\nimport StartStop from \"./start-stop\";\nimport DisplayTimer from \"./display-timer\";\nimport ProgressBar from \"./progress-bar\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focus, setFocus] = useState(25);\n  const [rest, setRest] = useState(5);\n  const [timeDisplay, setTimeDisplay] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [event, setEvent] = useState(\"Focus\");\n  const [totalTime, setTotalTime] = useState(0);\n  const [pause, setPause] = useState(true);\n\n  const stopAndReset = () => {\n    setIsTimerRunning(false);\n    setTimeDisplay(false);\n    setFocus(25);\n    setRest(5);\n    setPause(true);\n  };\n\n  useInterval(() => {\n    if (timer != 0) {\n      setTimer(timer - 1);\n    } else {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/alarm-clock-buzzer-beeps.mp3`).play();\n\n      if (event === \"Focus\") {\n        setEvent(\"Break\");\n        setTimer(rest * 60);\n      } else {\n        setEvent(\"Focus\");\n        setTimer(focus * 60);\n      }\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setTimeDisplay(true);\n    setPause(prevState => !prevState);\n  }\n\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTimer(focus * 60);\n    }\n\n    if (event === \"Break\") {\n      setTimer(rest * 60);\n    }\n  }, [focus, rest, event]);\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTotalTime(focus * 60);\n    }\n\n    if (event === \"Break\") {\n      setTotalTime(rest * 60);\n    }\n  }, [event, focus, rest]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Incrementbar, {\n    event: \"Focus\",\n    interval: focus,\n    setInterval: setFocus,\n    isTimerRunning: isTimerRunning,\n    timeDisplay: timeDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Incrementbar, {\n    event: \"Break\",\n    interval: rest,\n    setInterval: setRest,\n    isTimerRunning: isTimerRunning,\n    timeDisplay: timeDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StartStop, {\n    playPause: playPause,\n    isTimerRunning: isTimerRunning,\n    stopAndReset: stopAndReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), timeDisplay ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTimer, {\n    timer: timer,\n    event: event,\n    totalTime: totalTime,\n    pause: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    totalTime: totalTime,\n    timer: timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }))) : null);\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useEffect","classNames","useInterval","Incrementbar","StartStop","DisplayTimer","ProgressBar","minutesToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","focus","setFocus","rest","setRest","timeDisplay","setTimeDisplay","timer","setTimer","event","setEvent","totalTime","setTotalTime","pause","setPause","stopAndReset","Audio","process","env","PUBLIC_URL","play","playPause","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Incrementbar from \"./increment-bar\";\nimport StartStop from \"./start-stop\";\nimport DisplayTimer from \"./display-timer\";\nimport ProgressBar from \"./progress-bar\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focus, setFocus] = useState(25);\n  const [rest, setRest] = useState(5);\n  const [timeDisplay, setTimeDisplay] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [event, setEvent] = useState(\"Focus\");\n  const [totalTime, setTotalTime] = useState(0);\n  const [pause,setPause] =useState(true)\n  const stopAndReset = () => {\n    setIsTimerRunning(false);\n    setTimeDisplay(false);\n    setFocus(25);\n    setRest(5);\n    setPause(true)\n  };\n\n  useInterval(\n    () => {\n      if (timer != 0) {\n        setTimer(timer - 1);\n      } else {\n        new Audio(\n          `${process.env.PUBLIC_URL}/alarm/alarm-clock-buzzer-beeps.mp3`\n        ).play();\n        if (event === \"Focus\") {\n          setEvent(\"Break\");\n          setTimer(rest * 60);\n        } else {\n          setEvent(\"Focus\");\n          setTimer(focus * 60);\n        }\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setTimeDisplay(true);\n    setPause((prevState) => !prevState)\n  }\n\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTimer(focus * 60);\n    }\n    if (event === \"Break\") {\n      setTimer(rest * 60);\n    }\n  }, [focus, rest, event]);\n\n  useEffect(() => {\n    if (event === \"Focus\") {\n      setTotalTime(focus * 60);\n    }\n    if (event === \"Break\") {\n      setTotalTime(rest * 60);\n    }\n  }, [event, focus, rest]);\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-5 \">\n          <Incrementbar\n            event={\"Focus\"}\n            interval={focus}\n            setInterval={setFocus}\n            isTimerRunning={isTimerRunning}\n            timeDisplay={timeDisplay}\n          />\n        </div>\n        <div className=\"col-5\">\n          <Incrementbar event={\"Break\"} interval={rest} setInterval={setRest} isTimerRunning={isTimerRunning} timeDisplay={timeDisplay} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <StartStop\n            playPause={playPause}\n            isTimerRunning={isTimerRunning}\n            stopAndReset={stopAndReset}\n            \n          />\n        </div>\n      </div>\n\n      {timeDisplay ? (\n        <div>\n          {/* TODO: This area should show only when a focus or break session is running or pauses */}\n\n          <div className=\"row mb-2\">\n            <DisplayTimer timer={timer} event={event} totalTime={totalTime} pause={pause} />\n          </div>\n          <div className=\"row mb-2\">\n            <ProgressBar totalTime={totalTime} timer={timer} />\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}