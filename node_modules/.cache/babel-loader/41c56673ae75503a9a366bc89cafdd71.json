{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/display-timer.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction DisplayTimer({\n  timer,\n  event,\n  totalTime,\n  pause,\n  timeDisplay\n}) {\n  if (timeDisplay) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, event === \"Focus\" ? \"Focusing\" : \"On Break\", \" for \", totalTime === 3600 ? \"60:00\" : secondsToDuration(totalTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, timer === 3600 ? \"60:00\" : secondsToDuration(timer), \" remaining\"), pause === true ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"PAUSED\") : null);\n  } else {\n    return null;\n  }\n}\n\nexport default DisplayTimer;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/display-timer.js"],"names":["React","secondsToDuration","DisplayTimer","timer","event","totalTime","pause","timeDisplay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,KAAD;AAAOC,EAAAA,KAAP;AAAaC,EAAAA,SAAb;AAAuBC,EAAAA,KAAvB;AAA6BC,EAAAA;AAA7B,CAAtB,EAAiE;AAGjE,MAAGA,WAAH,EAAe;AACf,wBAGA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEY;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,KAAK,KAAK,OAAV,GAAoB,UAApB,GAAiC,UAAlE,WAAoFC,SAAS,KAAK,IAAd,GAAqB,OAArB,GAA+BJ,iBAAiB,CAACI,SAAD,CAApI,aAFZ,eAIY;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,KAAK,KAAK,IAAV,GAAiB,OAAjB,GAA2BF,iBAAiB,CAACE,KAAD,CADhD,eAJZ,EAOaG,KAAK,KAAK,IAAV,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAGO,IAVpB,CAHA;AAiBE,GAlBF,MAkBQ;AACN,WAAO,IAAP;AACD;AAGA;;AAED,eAAeJ,YAAf","sourcesContent":["import React from \"react\"\nimport {secondsToDuration} from \"../utils/duration\"\n\nfunction DisplayTimer({timer,event,totalTime,pause,timeDisplay}) {\n \n    \nif(timeDisplay){\nreturn (\n\n\n<div className=\"col\"> \n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">{event === \"Focus\" ? \"Focusing\" : \"On Break\"} for { totalTime === 3600 ? \"60:00\" : secondsToDuration(totalTime)} minutes</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              { timer === 3600 ? \"60:00\" : secondsToDuration(timer)} remaining\n            </p>\n            {pause === true ? \n            <h3>\n             PAUSED\n            </h3> : null}\n \n          </div>\n\n)} else {\n  return null\n}\n\n\n}\n\nexport default DisplayTimer"]},"metadata":{},"sourceType":"module"}